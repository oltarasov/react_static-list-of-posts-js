{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","name","email","body","className","href","CommentList","UserInfo","user","PostInfo","post","title","comments","length","map","id","PostList","posts","postsFromServer","userId","usersFromServer","find","commentId","commentsFromServer","filter","postId","App","ReactDOM","render","document","getElementById"],"mappings":"408IAAaA,EAAc,SAAC,GAAD,QAAGC,QAAWC,EAAd,EAAcA,KAAMC,EAApB,EAAoBA,MAAOC,EAA3B,EAA2BA,KAA3B,OACzB,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SACGH,IAGF,OAED,mBACEG,UAAU,qBACVC,KAAI,iBAAYH,GAFlB,SAIGA,OAIL,qBAAKE,UAAU,oBAAf,SACGD,QCfMG,G,MAAc,SAAC,GAAD,IAAGN,EAAH,EAAGA,QAAH,OACzB,sBAAKI,UAAU,cAAf,UACE,uBACA,cAAC,EAAD,CAAaJ,QAASA,SCJbO,G,MAAW,SAAC,GAAD,QAAGC,KAAQP,EAAX,EAAWA,KAAMC,EAAjB,EAAiBA,MAAjB,OACtB,8BACG,eAED,mBAAGE,UAAU,WAAWC,KAAI,iBAAYH,GAAxC,SACGD,SCHMQ,G,MAAW,SAAC,GAAD,QAAGC,KAAQC,EAAX,EAAWA,MAAOH,EAAlB,EAAkBA,KAAML,EAAxB,EAAwBA,KAAMS,EAA9B,EAA8BA,SAA9B,OACtB,sBAAKR,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCO,IACjC,cAAC,EAAD,CAAUH,KAAMA,OAGlB,mBAAGJ,UAAU,iBAAb,SACGD,IAGH,6BACuB,IAApBS,EAASC,OACR,mBAAG,UAAQ,oBAAX,6BAEAD,EAASE,KAAI,SAAAd,GAAO,OAClB,6BACE,cAAC,EAAD,CAAaA,QAASA,KADfA,EAAQe,cClBdC,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKb,UAAU,WAAf,SACE,6BAEIa,EAAMH,KAAI,SAAAJ,GAAI,OACZ,6BACE,cAAC,EAAD,CAAUA,KAAMA,KADTA,EAAKK,YCUjB,IAAME,EAAQC,EAAgBJ,KAAI,SAAAJ,GAAI,kCACxCA,GADwC,IAE3CF,MAZmBW,EAYDT,EAAKS,OAXhBC,EAAgBC,MAAK,SAAAb,GAAI,OAAIA,EAAKO,KAAOI,MAC3C,MAWLP,UARsBU,EAQGZ,EAAKK,GAPvBQ,EAAmBC,QAAO,SAAAxB,GAAO,OAAIA,EAAQyB,SAAWH,MAC1D,QAFP,IAAwBA,EALHH,KAgBRO,EAAM,kBACjB,0BAAStB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCACA,cAAC,EAAD,CAAUa,MAAOA,QCtBrBU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.57a94934.chunk.js","sourcesContent":["export const CommentInfo = ({ comment: { name, email, body } }) => (\n  <div className=\"CommentInfo\">\n    <div className=\"CommentInfo__title\">\n      <strong className=\"CommentInfo__name\">\n        {name}\n      </strong>\n\n      {' by '}\n\n      <a\n        className=\"CommentInfo__email\"\n        href={`mailto:${email}`}\n      >\n        {email}\n      </a>\n    </div>\n\n    <div className=\"CommentInfo__body\">\n      {body}\n    </div>\n  </div>\n);\n","import { CommentInfo } from '../CommentInfo';\nimport './CommentList.scss';\n\nexport const CommentList = ({ comment }) => (\n  <div className=\"CommentList\">\n    <hr />\n    <CommentInfo comment={comment} />\n  </div>\n);\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ user: { name, email } }) => (\n  <p>\n    {' Posted by  '}\n\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  </p>\n);\n","import { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\nimport './PostInfo.scss';\n\nexport const PostInfo = ({ post: { title, user, body, comments } }) => (\n  <div className=\"PostInfo\">\n    <div className=\"PostInfo__header\">\n      <h3 className=\"PostInfo__title\">{title}</h3>\n      <UserInfo user={user} />\n    </div>\n\n    <p className=\"PostInfo__body\">\n      {body}\n    </p>\n\n    <dl>\n      {comments.length === 0 ? (\n        <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n      ) : (\n        comments.map(comment => (\n          <dt key={comment.id}>\n            <CommentList comment={comment} />\n          </dt>\n        )))}\n    </dl>\n  </div>\n);\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    <dl>\n      {\n        posts.map(post => (\n          <dt key={post.id}>\n            <PostInfo post={post} />\n          </dt>\n        ))\n      }\n    </dl>\n  </div>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\nimport { PostList } from './components/PostList';\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId)\n    || null;\n}\n\nfunction getCommentById(commentId) {\n  return commentsFromServer.filter(comment => comment.postId === commentId)\n    || null;\n}\n\nexport const posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUserById(post.userId),\n  comments: getCommentById(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}